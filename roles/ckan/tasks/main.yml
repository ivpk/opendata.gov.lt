---
- name: install ubuntu packages
  apt: name={{ item }}
  with_items:
    - python-dev
    - python-psycopg2
    - python-pip
    - python-virtualenv
    - postgresql
    - postgresql-client
    - postgresql-contrib
    - libpq-dev
    - git
    - default-jdk
    - solr-jetty
    - redis-server

- name: install ckan into python virtualenv
  become_user: "{{ ckan_user }}"
  pip:
    chdir: "{{ ckan_path }}"
    virtualenv: "{{ ckan_venv }}"
    virtualenv_python: python2
    name: "git+https://github.com/ckan/ckan.git@ckan-{{ ckan_version }}#egg=ckan"
    editable: true
    state: present

# https://github.com/getsentry/sentry/issues/3143#issuecomment-243437541
- name: workaround for the setuptools issue
  become_user: "{{ ckan_user }}"
  pip:
    executable: "{{ ckan_venv }}/bin/pip"
    name: setuptools
    version: 20.4

- name: install ckan dependencies
  become_user: "{{ ckan_user }}"
  pip:
    chdir: "{{ ckan_path }}"
    virtualenv: "{{ ckan_venv }}"
    virtualenv_python: python2
    requirements: "{{ ckan_home }}/requirements.txt"
    state: present

- name: create ckan_default postgresql user
  become_user: postgres
  postgresql_user:
    name: ckan_default
    password: "{{ secrets.postgresql.ckan_default }}"
    role_attr_flags: NOCREATEDB,NOSUPERUSER,NOCREATEROLE

- name: create ckan_default postgresql database
  become_user: postgres
  postgresql_db:
    name: ckan_default
    owner: ckan_default
    encoding: UTF-8
    lc_collate: C.UTF-8
    lc_ctype: C.UTF-8
    template: template0
  notify: create ckan database tables
  tags: [create_ckan_db]

- name: create datastore_default postgresql user
  become_user: postgres
  postgresql_user:
    name: datastore_default
    password: "{{ secrets.postgresql.datastore_default }}"
    role_attr_flags: NOCREATEDB,NOSUPERUSER,NOCREATEROLE
  register: datastore_db_user

- name: create datastore_default postgresql database
  become_user: postgres
  postgresql_db:
    name: datastore_default
    owner: ckan_default
    encoding: UTF-8
    lc_collate: C.UTF-8
    lc_ctype: C.UTF-8
    template: template0

- name: configure solr/jetty
  lineinfile:
    dest: /etc/default/jetty8
    regexp: "^{{ item.name }}="
    line: "{{ item.name }}={{ item.value }}"
  with_items:
    - {name: "NO_START", value: "0"}
    - {name: "JETTY_HOST", value: "127.0.0.1"}
    - {name: "JETTY_PORT", value: "8983"}
  notify: restart solr

- name: start solr/jetty
  service: name=jetty8 state=started

- name: create solr schema file backup
  command: mv /etc/solr/conf/schema.xml /etc/solr/conf/schema.xml.bak
  args:
    creates: /etc/solr/conf/schema.xml.bak

- name: replace solr schema file with one provided by ckan
  notify: restart solr
  command: cp -a {{ ckan_home }}/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
  args:
    creates: /etc/solr/conf/schema.xml

- name: create symbolic link to who.ini
  file: src={{ ckan_home }}/who.ini dest={{ ckan_who_ini }} state=link

- name: create ckan configuration file
  template:
    src: ckan.ini.j2
    dest: "{{ ckan_config }}"
  notify: reload apache
  tags: who

- name: get datastore_default postresql user permissions
  shell: "{{ ckan_venv }}/bin/paster --plugin=ckan datastore set-permissions -c {{ ckan_config }} > /tmp/datastore_permissions.sql chdir={{ ckan_home }}"
  when: datastore_db_user.changed

- name: set datastore_default postresql user permissions
  become_user: postgres
  command: psql --set=ON_ERROR_STOP=1 --file=/tmp/datastore_permissions.sql
  when: datastore_db_user.changed
